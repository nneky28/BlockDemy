/* This would contain all the utils */

//Commencing the code
$primary-color: #1363DF;
$secondary-color: #E9F1FF;
$tertiary-color: #FFFFFF;
$tertiary-color-1: #D9D7DD;
$tertiary-color-2: #0A3270;
$error-color: #E42C2C;
$text-color-1: #160D2B;
$text-color-2: #06214A;
$star-color: #E9AC00;

$breakpoints: (
  "phoneMini": 0px,
  "phone": 300px,
  "phonePro": 400px,
  "tabletMini": 600px,
  "tablet": 800px,
  "tabletPro": 1000px,
  "desktop": 1200px,
);

@mixin phoneMini {
  @media only screen and (min-width: map-get($breakpoints, "phoneMini")) and (max-width: map-get($breakpoints, "phone")) {
    @content;
  }
}

@mixin phone {
  @media only screen and (min-width: map-get($breakpoints, "phoneMini")) and (max-width: map-get($breakpoints, "phonePro")) {
    @content;
  }
}

@mixin phonePro {
  @media only screen and (min-width: map-get($breakpoints, "phoneMini")) and (max-width: map-get($breakpoints, "tabletMini")) {
    @content;
  }
}

@mixin tabletMini {
  @media only screen and (min-width: map-get($breakpoints, "tabletMini")) and (max-width: map-get($breakpoints, "tablet")){
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: map-get($breakpoints, "tabletMini")) and (max-width: map-get($breakpoints, "tabletPro")){
    @content;
  }
}

@mixin tabletPro {
  @media only screen and (min-width: map-get($breakpoints, "tabletMini")) and (max-width: map-get($breakpoints, "desktop")){
    @content;
  }
}

@mixin desktop {
  @media (min-width: map-get($breakpoints, "desktop")) {
    @content;
  }
}

@mixin breakpoint($min: 0, $max: 0) {
  @media only screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin size ($width: 100%, $height: 100%) {
    width: $width;
    height: $height;
}

@mixin max-size ($max-width: 100%, $max-height: 100%) {
    max-width: $max-width;
    max-height: $max-height;
}

@mixin flexBar ($position: absolute, $display: flex, $align: none, $justify: none, $gap: 1%, $flex_d: row, $flex: none, $wrap: none) {
    position: $position;
    display: $display;
    flex-wrap: $wrap;
    flex-direction: $flex_d;
    align-items: $align;
    flex: $flex;
    justify-content: $justify;
    gap: $gap;
}

@mixin text-layout($size: 14px, $color: $text-color-1, $l_height: 24px, $weight: 400, $style: normal, $family: auto) {
    font-style: $style;
    font-size: $size;
    line-height: $l_height;
    font-weight: $weight;
    color: $color;
    font-family: $family;
}

///Declaring the necessary font families
@font-face {
  font-family: "Open Sans";
  src: url("../public/fonts/OpenSans-Regular.ttf") format('truetype');
}

@font-face {
  font-family: "Noto Serif";
  src: url("../public/fonts/NotoSerif-Regular.ttf") format('truetype');
}

@font-face {
  font-family: "Poppins";
  src: url("../public/fonts/Poppins-Regular.ttf") format('truetype');
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}